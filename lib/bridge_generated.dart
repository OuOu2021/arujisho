// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.48.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'package:meta/meta.dart';
import 'package:meta/meta.dart';
import 'dart:ffi' as ffi;

abstract class SudachiFfi {
  Future<List<List<String>>> parse(
      {required String data, required String configPath, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kParseConstMeta;
}

class SudachiFfiImpl implements SudachiFfi {
  final SudachiFfiPlatform _platform;
  factory SudachiFfiImpl(ExternalLibrary dylib) =>
      SudachiFfiImpl.raw(SudachiFfiPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory SudachiFfiImpl.wasm(FutureOr<WasmModule> module) =>
      SudachiFfiImpl(module as ExternalLibrary);
  SudachiFfiImpl.raw(this._platform);
  Future<List<List<String>>> parse(
          {required String data, required String configPath, dynamic hint}) =>
      _platform.executeNormal(FlutterRustBridgeTask(
        callFfi: (port_) => _platform.inner.wire_parse(
            port_,
            _platform.api2wire_String(data),
            _platform.api2wire_String(configPath)),
        parseSuccessData: _wire2api_list_StringList,
        constMeta: kParseConstMeta,
        argValues: [data, configPath],
        hint: hint,
        // TODO
        parseErrorData: (errorData) => {},
      ));

  FlutterRustBridgeTaskConstMeta get kParseConstMeta =>
      const FlutterRustBridgeTaskConstMeta(
        debugName: "parse",
        argNames: ["data", "configPath"],
      );
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: wire2api

String _wire2api_String(dynamic raw) {
  return raw as String;
}

List<String> _wire2api_StringList(dynamic raw) {
  return (raw as List<dynamic>).cast<String>();
}

List<List<String>> _wire2api_list_StringList(dynamic raw) {
  return (raw as List<dynamic>).map(_wire2api_StringList).toList();
}

int _wire2api_u8(dynamic raw) {
  return raw as int;
}

Uint8List _wire2api_uint_8_list(dynamic raw) {
  return raw as Uint8List;
}

class SudachiFfiPlatform extends FlutterRustBridgeBase<SudachiFfiWire> {
  SudachiFfiPlatform(ffi.DynamicLibrary dylib) : super(SudachiFfiWire(dylib));
// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: api_fill_to_wire
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class SudachiFfiWire implements FlutterRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SudachiFfiWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SudachiFfiWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>(
          'store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr
      .asFunction<void Function(DartPostCObjectFnType)>();

  void wire_parse(
    int port_,
    ffi.Pointer<wire_uint_8_list> data,
    ffi.Pointer<wire_uint_8_list> config_path,
  ) {
    return _wire_parse(
      port_,
      data,
      config_path,
    );
  }

  late final _wire_parsePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.Pointer<wire_uint_8_list>,
              ffi.Pointer<wire_uint_8_list>)>>('wire_parse');
  late final _wire_parse = _wire_parsePtr.asFunction<
      void Function(
          int, ffi.Pointer<wire_uint_8_list>, ffi.Pointer<wire_uint_8_list>)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_0(
    int len,
  ) {
    return _new_uint_8_list_0(
      len,
    );
  }

  late final _new_uint_8_list_0Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>(
      'new_uint_8_list_0');
  late final _new_uint_8_list_0 = _new_uint_8_list_0Ptr
      .asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();

  void free_WireSyncReturnStruct(
    WireSyncReturn val,
  ) {
    return _free_WireSyncReturnStruct(
      val,
    );
  }

  late final _free_WireSyncReturnStructPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>(
          'free_WireSyncReturnStruct');
  late final _free_WireSyncReturnStruct =
      _free_WireSyncReturnStructPtr.asFunction<void Function(WireSyncReturn)>();

  @override
  void drop_dart_object(int ptr) {
    // TODO: implement drop_dart_object
  }

  @override
  void free_WireSyncReturn(WireSyncReturn val) {
    // TODO: implement free_WireSyncReturn
  }

  @override
  Object get_dart_object(int ptr) {
    // TODO: implement get_dart_object
    throw UnimplementedError();
  }

  @override
  int new_dart_opaque(Object obj) {
    // TODO: implement new_dart_opaque
    throw UnimplementedError();
  }
}

final class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

typedef DartPostCObjectFnType = ffi.Pointer<
    ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
